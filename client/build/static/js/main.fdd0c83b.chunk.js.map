{"version":3,"sources":["utils/API.js","pages/Items.js","pages/NoMatch.js","pages/Nav.js","pages/User.js","pages/About.js","App.js","index.js"],"names":["axios","get","headers","token","window","localStorage","getItem","id","delete","itemData","post","storeData","Item","storeId","splitData","fetchedData","newarray","length","forEach","x","date","map","y","_id","name","Date","valueOf","parentId","sort","a","b","aa","split","reverse","join","bb","setData","fetchData","API","then","res","data","catch","err","response","status","setError","console","log","useEffect","useState","selectedDate","handleDateChange","error","style","maxWidth","margin","paddingTop","paddingBottom","Paper","elevation","square","Typography","variant","align","columns","title","field","sorting","removable","editComponent","utils","MomentUtils","DatePicker","disablePast","format","value","onChange","editable","onRowAdd","newItem","store","moment","category","onRowDelete","oldItem","options","columnsButton","grouping","actionsColumnIndex","paging","draggable","showTitle","rowStyle","rowData","backgroundColor","add","isBefore","parentChildData","row","rows","find","localization","body","emptyDataSourceMessage","editRow","deleteText","NoMatch","Nav","setStore","history","useHistory","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","cursor","onClick","removeItem","push","useInput","initivalValue","setValue","reset","bind","e","target","useStyles","makeStyles","login_page","width","form","padding","textAlign","form_input","color","form_button","background","message","font","message_link","textDecoration","UserPage","setStoreId","view","setView","bindName","resetName","password","bindPassword","resetPassword","password1","bindPassword1","resetPassword1","password2","bindPassword2","resetPassword2","eLn","seteLn","eLp","seteLp","eRn","seteRn","eRp","seteRp","eRp2","seteRp2","handleFormChange","classes","noValidate","autoComplete","TextField","label","helperText","Button","preventDefault","setTimeout","setItem","test","about_page","About","letterSpacing","App","React","exact","path","render","Items","User","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fdd0c83b.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport default {\r\n    getItems: function() {\r\n        return axios.get('/api/items', {\r\n            headers: { token: window.localStorage.getItem('token')} \r\n        })\r\n    },\r\n    getItem: function(id) {\r\n        return axios.get(`/api/items/${id}`)\r\n    },\r\n    deleteItem: function(id) {\r\n        return axios.delete(`/api/items/${id}`)\r\n    },\r\n    saveItem: function(itemData) {\r\n        return axios.post(`/api/items`, itemData)\r\n    },\r\n    registerStore: function(storeData) {\r\n        return axios.post(`/api/store`, storeData)\r\n    },\r\n    logIn: function(storeData) {\r\n        return axios.post(`/api/store/login`, storeData)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport API from '../utils/API'\r\nimport MaterialTable from 'material-table'\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers'\r\nimport { Paper, Typography } from '@material-ui/core'\r\nimport moment from 'moment'\r\nimport MomentUtils from '@date-io/moment'\r\n\r\n// This imports the list of items in case we opt for a lookup in the table\r\n\r\n//import itemList from './List/itemList'\r\n//import categoryList from './List/CategoryList'\r\n\r\nlet Item = ({storeId}) => {\r\n  \r\n    // function that sorts the data based on asc date\r\n    let sortData = (array) => {\r\n      let a = array.sort(function(a, b){\r\n        var aa = a.date.split('-').reverse().join(),\r\n            bb = b.date.split('-').reverse().join();\r\n        return aa < bb ? -1 : (aa > bb ? 1 : 0);\r\n      })\r\n      return a\r\n    }\r\n\r\n    // splits array so that every element has only one date and \r\n    // can be rendered as child in table\r\n    let splitData = (fetchedData) => {\r\n        let newarray = []\r\n  \r\n        if (fetchedData.length > 0) {\r\n\r\n            fetchedData.forEach(x => {  \r\n                x.date.length > 1 ? \r\n                x.date.map(y => \r\n                    y === x.date[0] ? \r\n                    newarray = [...newarray, {_id: x._id, name: x.name, date: y}] :\r\n                    newarray = [...newarray, {_id: new Date().valueOf(), date: y, parentId: x._id}])\r\n                : \r\n                newarray = [...newarray, {...x, date: x.date[0]}]\r\n            })\r\n\r\n          } \r\n          \r\n        sortData(newarray)\r\n        setData(newarray)\r\n        // setStoreName from props so that it can be rendered in Nav component\r\n        // setStoreName(newarray[0].store.name)\r\n        // setStore contains the store id that is needed in the API post route to create a new item\r\n        // setStore(newarray[0].store._id)\r\n    }\r\n  \r\n    async function fetchData() {\r\n      // API CALL TO GET STORE ID\r\n\r\n      API.getItems()\r\n             .then(res => splitData(res.data))\r\n             .catch(err => {\r\n               switch(err.response.status) {\r\n                 case 500:\r\n                   setError('Session expired: Please log out and log in again.')\r\n                   break\r\n                 default:\r\n                   console.log('Error while fetching items: ' + err)\r\n               }\r\n             })\r\n    }\r\n  \r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    let [ data, setData ] = useState([])\r\n    let [ selectedDate, handleDateChange ] = useState(new Date())\r\n    let [ error, setError ] = useState('')\r\n\r\n    // TABLE IMPLEMENTATIONS:\r\n    //      Listing of item names:     < lookup: itemList > option to column (import itemList)\r\n    //      Listing of categories:     < lookup: categoryList > option to column (import categoryList)\r\n    //      Conditional deletion:      remove comment from isDeletable\r\n\r\n    return (\r\n      <>\r\n        <div style={{ maxWidth: '100%', margin: 'auto', paddingTop: '1rem', paddingBottom: '3rem' }}>\r\n          { error ? \r\n          <Paper elevation={23} square={false}>\r\n            <Typography variant='h6' align='center'>{error}</Typography>\r\n          </Paper>\r\n            :\r\n          <MaterialTable\r\n            columns={[\r\n              { title: 'Name', field: 'name', sorting: false, removable: false },\r\n              { title: 'Date', field: 'date', sorting: false, removable: false,\r\n                editComponent: () => (\r\n                  <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                    <DatePicker\r\n                      disablePast\r\n                      variant=\"inline\"\r\n                      format='DD-MM-YY'\r\n                      margin=\"normal\"\r\n                      id=\"date-picker\"\r\n                      value={selectedDate}\r\n                      onChange={handleDateChange}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                )\r\n               },\r\n              {title: 'Group', field: 'category', sorting: true}\r\n            ]}\r\n            data={data}\r\n            editable={{\r\n              //isDeletable: rowData => moment(rowData.date, 'DD-MM-YY').isBefore(moment().add(2, 'days')),\r\n              onRowAdd: newItem => API.saveItem({\r\n                                      store: storeId,\r\n                                      name: newItem.name,\r\n                                      date: moment(selectedDate).format('DD-MM-YY'),\r\n                                      category: newItem.category\r\n                                      })\r\n                                      .then(res => fetchData())\r\n                                      .catch(err => console.log(err))\r\n              ,\r\n              onRowDelete: oldItem => API.deleteItem(oldItem._id)\r\n                                         .then(res => fetchData())\r\n                                         .catch(err => console.log(err))\r\n            }}\r\n            options={{\r\n              columnsButton: true,\r\n              grouping: false,\r\n              actionsColumnIndex: -1,\r\n              paging: false,\r\n              draggable: false,\r\n              showTitle: false,\r\n              rowStyle: rowData => ({\r\n                backgroundColor: (\r\n                  rowData.date === moment().format('DD-MM-YY') ? '#FF5722' \r\n                  :\r\n                  rowData.date === moment().add(1, 'days').format('DD-MM-YY') ? '#FFA726' \r\n                  :\r\n                  rowData.date === moment().add(2, 'days').format('DD-MM-YY') ? '#FFEE58'\r\n                  : \r\n                  moment(rowData.date, 'DD-MM-YY').isBefore(moment()) ? '#9E9E9E' \r\n                  :\r\n                  ''\r\n                   )\r\n              })\r\n            }}\r\n            parentChildData={(row, rows) => rows.find(a => a._id === row.parentId)}\r\n            localization={{\r\n              body: {\r\n                emptyDataSourceMessage: 'No tracked items in store.',\r\n                editRow: {\r\n                  deleteText: 'Are you sure you want to delete this item?'\r\n                }\r\n              }\r\n            }}\r\n          />\r\n          }\r\n        </div>       \r\n      </>\r\n    );\r\n  }\r\n\r\nexport default Item","import React from \"react\";\n\nconst NoMatch = () => (\n  <h1>Page Not Found 🙄</h1>\n);\n\nexport default NoMatch;\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Nav = ( {store, setStore} ) => {\r\n\r\n    let history = useHistory()\r\n\r\n    const logOut = () => {\r\n        window.localStorage.removeItem('token')\r\n        setStore('')\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className='navbar navbar-expand-md navbar-dark bg-dark'>\r\n                { store ? \r\n                <Link to='/item' className='navbar-brand'>Expy</Link>\r\n                :\r\n                <Link to='/' className='navbar-brand'>Expy</Link>\r\n                }\r\n                <span className='navbar-text'>{store}</span>\r\n                \r\n                <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarMain' aria-controls='navbarMain' aria-expanded='false' aria-label='Toggle navigation'>\r\n                    <span className='navbar-toggler-icon'></span>\r\n                </button>\r\n                \r\n                <div className='collapse navbar-collapse flex-grow-1 text-center' id='navbarMain'>\r\n                    <ul className='navbar-nav ml-auto flex-nowrap'>\r\n                        {\r\n                            store ? \r\n                        <li className='nav-item'>\r\n                            <div className='nav-link' style={{cursor: 'pointer'}} onClick={logOut}>Log Out</div>\r\n                        </li>\r\n                            :\r\n                        <li className='nav-item'>\r\n                            <Link to={'/user'} className='nav-link'>Login/Register</Link>\r\n                        </li>\r\n                        } \r\n                    </ul>\r\n                \r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Nav\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport API from '../utils/API'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { Paper, TextField, Button, Typography } from '@material-ui/core'\r\n\r\nlet useInput = initivalValue => {\r\n\tconst [value, setValue] = useState(initivalValue)\r\n\t\r\n\treturn {\r\n\t\tvalue,\r\n\t\tsetValue,\r\n\t\treset: () => setValue(''),\r\n\t\tbind: {\r\n\t\t\tvalue,\r\n\t\t\tonChange: e => {\r\n\t\t\t\tsetValue(e.target.value)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n\tlogin_page: {\r\n\t\twidth: '360px',\r\n  \t\tmargin: '5% auto'\r\n\t},\r\n\tform: {\r\n\t\tpadding: '45px',\r\n  \t\ttextAlign: 'center'\r\n\t},\r\n\tform_input: {\r\n\t\tmargin: '0 0 15px',\r\n\t\t'& .MuiFormHelperText-root': {\r\n\t\t\tcolor: 'rgb(181, 17, 68)'\r\n\t\t}\r\n\t},\r\n\tform_button: {\r\n\t\tbackground: 'rgb(109, 31, 55)',\r\n\t\twidth: '100%',\r\n\t\tpadding: '15px',\r\n\t\tcolor: '#ffffff',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgb(191, 3, 65)'\r\n\t\t}\r\n\t},\r\n\tmessage: {\r\n\t\tmargin: '15px 0 0',\r\n\t\tcolor: '#b3b3b3',\r\n\t\tfont: 'Medium'\r\n\t},\r\n\tmessage_link: {\r\n\t\tmargin: '5px 0 0',\r\n\t\tcolor: 'rgb(109, 31 ,55)',\r\n\t\ttextDecoration: 'underline',\r\n\t\tcursor: 'pointer'\r\n\t}\r\n})\r\n\r\nconst UserPage = ({setStore, setStoreId}) => {\r\n\tlet history = useHistory()\r\n    let [view, setView] = useState('login')\r\n\tlet { value: name , bind: bindName , reset: resetName } = useInput('')\r\n\tlet { value: password , bind: bindPassword , reset: resetPassword } = useInput('')\r\n\tlet { value: password1 , bind: bindPassword1 , reset: resetPassword1 } = useInput('')\r\n\tlet { value: password2 , bind: bindPassword2 , reset: resetPassword2 } = useInput('')\r\n\tlet [ eLn, seteLn ] = useState('')\r\n\tlet [ eLp, seteLp ] = useState('')\r\n\tlet [ eRn, seteRn ] = useState('')\r\n\tlet [ eRp, seteRp ] = useState('')\r\n\tlet [ eRp2, seteRp2 ] = useState('')\r\n\r\n\r\n\t// Resets the passwords value when switching form and sets value for view\r\n\tlet handleFormChange = (value) => {\r\n\t\t//resetName()\r\n\t\tresetPassword()\r\n\t\tresetPassword1()\r\n\t\tresetPassword2()\r\n\t\tsetView(value)\r\n\t}\r\n\r\n\tlet handleLogin = (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tif (!name) {\r\n\t\t\tresetName()\r\n\t\t\tseteLn('Please enter your store name')\r\n\t\t\tsetTimeout(() => seteLn(''), 2500)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (password.length < 6) {\r\n\t\t\tseteLp('Please enter a valid password')\r\n\t\t\tsetTimeout(() => seteLp(''), 2500)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tAPI.logIn({name, password})\r\n\t\t\t.then(res => {\r\n\t\t\t\t// window.sessionStorage.setItem('token', token)\r\n\t\t\t\tlet token = res.data.token\r\n\t\t\t\twindow.localStorage.setItem('token', token)\t\r\n\t\t\t\tsetStore(name)\r\n\t\t\t\tsetStoreId(res.data.storeId)\r\n\t\t\t\thistory.push('/item')\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tswitch(err.response.status) {\r\n\t\t\t\t\tcase 404: \r\n\t\t\t\t\t\tseteLn(err.response.data.message)\r\n\t\t\t\t\t\tsetTimeout(() => seteLn(''), 2500)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 400:\r\n\t\t\t\t\t\tseteLp(err.response.data.message)\r\n\t\t\t\t\t\tsetTimeout(() => seteLp(''), 2500)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tseteLn('Server error. Please try again.')\r\n\t\t\t\t\t\tseteLp('Server error. Please try again.')\r\n\t\t\t\t\t\tsetTimeout(() => seteLn(''), 2500)\r\n\t\t\t\t\t\tsetTimeout(() => seteLp(''), 2500)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tlet handleRegister = (e) => {\r\n\t\te.preventDefault()\r\n\t\t\r\n\t\tif (/\\s/g.test(name) || !name) {\r\n\t\t\tresetName()\r\n\t\t\tseteRn('Enter a valid name (no white spaces)')\r\n\t\t\tsetTimeout(() => seteRn(''), 2500)\r\n\t\t\treturn\r\n\t\t}\r\n\t\r\n\t\tif(!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}$/g.test(password1)) {\r\n\t\t\tseteRp('Please enter a valid password (no spaces, min 6 digit)')\r\n\t\t\tsetTimeout(() => seteRp(''), 2500)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif(!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}$/g.test(password2)) {\r\n\t\t\tseteRp2('Please re-enter password (no spaces, min 6 digit)')\r\n\t\t\tsetTimeout(() => seteRp2(''), 2500)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif(password1 !== password2) {\r\n\t\t\tseteRp2('The two password must match')\r\n\t\t\tsetTimeout(() => seteRp2(''), 2500)\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tAPI.registerStore({name, password: password1})\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetView('login')\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tswitch(err.response.status) {\r\n\t\t\t\t\tcase 400:\r\n\t\t\t\t\t\tseteRn(err.response.data.message)\r\n\t\t\t\t\t\tsetTimeout(() => {seteRn('') \r\n\t\t\t\t\t\tsetView('login')}, 2500)\t\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tseteRn('Server error. Please try again.')\r\n\t\t\t\t\t\tseteRp('Server error. Please try again.')\r\n\t\t\t\t\t\tseteRp2('Server error. Please try again.')\r\n\t\t\t\t\t\tsetTimeout(() => seteRn(''), 2500)\r\n\t\t\t\t\t\tsetTimeout(() => seteRp(''), 2500)\r\n\t\t\t\t\t\tsetTimeout(() => seteRp2(''), 2500)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\r\n\t}\r\n\t\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Paper elevation={23} square={false} className={classes.login_page}>\r\n\t\t\t\t<form className={classes.form} noValidate autoComplete='off'>\r\n\t\t\t\t\t{view === 'login' ?\r\n\t\t\t\t\t<div className='login_form'>\r\n\t\t\t\t\t\t<TextField error={eLn !== ''} className={classes.form_input} id='store-name' variant='outlined' label='Enter store name' helperText={eLn} {...bindName}/>\r\n\t\t\t\t\t\t<TextField error={eLp !== ''} className={classes.form_input} id='store-password' variant='outlined' type='password' label='Enter password' helperText={eLp} {...bindPassword}/>\r\n\t\t\t\t\t\t<Button className={classes.form_button} variant='outlined' onClick={handleLogin}>Log In</Button>\r\n\t\t\t\t\t\t<div className={classes.message}>\r\n\t\t\t\t\t\t\tDon't have an account? <Typography className={classes.message_link} onClick={() => handleFormChange('register')}>Create an account</Typography>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<div className='register_form'>\r\n\t\t\t\t\t\t<TextField error={eRn !== ''} className={classes.form_input} id='store-name' variant='outlined' label='Enter store name' helperText={eRn} {...bindName}/>\r\n\t\t\t\t\t\t<TextField error={eRp !== ''} className={classes.form_input} id='store-password1' variant='outlined' type='password' label='Enter password' helperText={eRp} {...bindPassword1}/>\r\n\t\t\t\t\t\t<TextField error={eRp2 !== ''} className={classes.form_input} id='store-password2' variant='outlined' type='password' label='Re-enter password' helperText={eRp2} {...bindPassword2}/>\r\n\t\t\t\t\t\t<Button className={classes.form_button} variant='outlined' onClick={handleRegister}>Register</Button>\r\n\t\t\t\t\t\t<div className={classes.message}>\r\n\t\t\t\t\t\t\tAlready registered? <Typography className={classes.message_link} onClick={() => handleFormChange('login')}>Log In</Typography>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</form>\r\n\t\t\t</Paper>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default UserPage;\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { Paper, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    about_page: {\r\n        width: '80%',\r\n        margin: '5% auto',\r\n        padding: '3%'\r\n    }\r\n})\r\n\r\n\r\nconst About = () => {\r\n    \r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <Paper elevation={23} square={false} className={classes.about_page}>\r\n                <Typography variant='h4' align='center' style={{letterSpacing: '.5rem'}}>EXPY</Typography>\r\n                <Typography variant='subtitle1' align='center' style={{margin: '3% auto'}}>\r\n                    Expy is a products expiration date tracker.\r\n                </Typography>\r\n                    <br/>\r\n                <Typography variant='body2' align='center'>\r\n                    Sync between multiple devices\r\n                    <br />\r\n                    Just Register and account and you are ready to go!\r\n                    <br /> \r\n                    ( More features coming with future updates )\r\n                </Typography>    \r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Items from './pages/Items'\nimport NoMatch from './pages/NoMatch'\nimport Nav from './pages/Nav'\nimport UserPage from './pages/User'\nimport About from './pages/About'\n\nconst App = () => {\n\n  let [store, setStore] = React.useState('')\n  let [storeId, setStoreId] = React.useState('')\n\n  return(\n    <Router>\n      <div>\n        <Nav store={store} setStore={setStore}></Nav>\n        <Switch>\n          <Route exact path='/' render={() => <About />}/>\n          <Route exact path='/item' render={() => <Items storeId={storeId}/>} />\n          <Route exact path='/user' render={() => <UserPage setStore={setStore} setStoreId={setStoreId}/>} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}